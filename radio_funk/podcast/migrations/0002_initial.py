# Generated by Django 3.2.12 on 2022-03-18 00:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0004_alter_options_ordering_domain'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('countries_plus', '0005_auto_20160224_1804'),
        ('podcast', '0001_initial'),
        ('genre', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='podcast',
            name='author',
            field=models.ForeignKey(help_text='Make certain the user account has a name and e-mail address.', on_delete=django.db.models.deletion.PROTECT, related_name='podcast_shows', to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='podcast',
            name='country',
            field=models.ForeignKey(default='US', on_delete=django.db.models.deletion.CASCADE, to='countries_plus.country'),
        ),
        migrations.AddField(
            model_name='podcast',
            name='genre',
            field=models.ManyToManyField(blank=True, related_name='podcast', to='genre.Genre'),
        ),
        migrations.AddField(
            model_name='podcast',
            name='like',
            field=models.ManyToManyField(blank=True, default=None, related_name='podcast_likes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='podcast',
            name='sites',
            field=models.ManyToManyField(to='sites.Site', verbose_name='Sites'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='like',
            field=models.ManyToManyField(blank=True, default=None, related_name='playlist_likes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='playlist',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='playlist_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='playlist',
            name='podcast',
            field=models.ManyToManyField(to='podcast.Podcast'),
        ),
        migrations.AddField(
            model_name='episodes',
            name='keywords',
            field=models.ManyToManyField(blank=True, help_text='Select multiple genre from the list of predefined genres', related_name='episode', to='genre.Genre'),
        ),
        migrations.AddField(
            model_name='episodes',
            name='like',
            field=models.ManyToManyField(blank=True, default=None, related_name='podcast_episode_likes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='episodes',
            name='podcast',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='podcast', to='podcast.podcast'),
        ),
        migrations.AddField(
            model_name='episodegift',
            name='episode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='episode_gift', to='podcast.episodes'),
        ),
        migrations.AddField(
            model_name='episodegift',
            name='gift',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='gift', to='podcast.gift'),
        ),
        migrations.AddField(
            model_name='episodegift',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='gifter', to=settings.AUTH_USER_MODEL),
        ),
    ]
